{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\EduAI-Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  q: \"I prefer learning by seeing diagrams\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I prefer listening to explanations\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I prefer reading/writing notes\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I prefer learning by doing things physically\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I remember concepts better with images\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I retain information better by hearing\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I like to summarize text in my own words\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I understand things better by practicing\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I prefer visual aids to learn\",\n  options: [1, 2, 3, 4, 5]\n}, {\n  q: \"I like interactive exercises\",\n  options: [1, 2, 3, 4, 5]\n}];\nfunction App() {\n  _s();\n  const [answers, setAnswers] = useState(Array(10).fill(3));\n  const [result, setResult] = useState(\"\");\n  const handleSelect = (index, value) => {\n    const newAnswers = [...answers];\n    newAnswers[index] = value;\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = async () => {\n    try {\n      const res = await axios.post(\"http://localhost:8000/predict-style\", {\n        answers: answers\n      });\n      setResult(res.data.learning_style);\n    } catch (err) {\n      console.error(err);\n      setResult(\"Error predicting style\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"EduAI Learning Style Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [i + 1, \". \", q.q]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), q.options.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `q${i}`,\n          value: opt,\n          checked: answers[i] === opt,\n          onChange: () => handleSelect(i, opt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), opt]\n      }, opt, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Predict Learning Style\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"result\",\n      children: [\"Predicted Style: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OqgOwTi0ZtT64RYmWgmfhI2yLyE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","questions","q","options","App","_s","answers","setAnswers","Array","fill","result","setResult","handleSelect","index","value","newAnswers","handleSubmit","res","post","data","learning_style","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","opt","style","marginRight","type","name","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mathe/Desktop/EduAI-Frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst questions = [\r\n  { q: \"I prefer learning by seeing diagrams\", options: [1,2,3,4,5] },\r\n  { q: \"I prefer listening to explanations\", options: [1,2,3,4,5] },\r\n  { q: \"I prefer reading/writing notes\", options: [1,2,3,4,5] },\r\n  { q: \"I prefer learning by doing things physically\", options: [1,2,3,4,5] },\r\n  { q: \"I remember concepts better with images\", options: [1,2,3,4,5] },\r\n  { q: \"I retain information better by hearing\", options: [1,2,3,4,5] },\r\n  { q: \"I like to summarize text in my own words\", options: [1,2,3,4,5] },\r\n  { q: \"I understand things better by practicing\", options: [1,2,3,4,5] },\r\n  { q: \"I prefer visual aids to learn\", options: [1,2,3,4,5] },\r\n  { q: \"I like interactive exercises\", options: [1,2,3,4,5] }\r\n];\r\n\r\nfunction App() {\r\n  const [answers, setAnswers] = useState(Array(10).fill(3));\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  const handleSelect = (index, value) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index] = value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:8000/predict-style\", {\r\n        answers: answers\r\n      });\r\n      setResult(res.data.learning_style);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setResult(\"Error predicting style\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>EduAI Learning Style Predictor</h2>\r\n      {questions.map((q, i) => (\r\n        <div key={i} className=\"question\">\r\n          <p>{i+1}. {q.q}</p>\r\n          {q.options.map((opt) => (\r\n            <label key={opt} style={{ marginRight: \"10px\" }}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`q${i}`}\r\n                value={opt}\r\n                checked={answers[i] === opt}\r\n                onChange={() => handleSelect(i, opt)}\r\n              />\r\n              {opt}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Predict Learning Style</button>\r\n      {result && <h3 className=\"result\">Predicted Style: {result}</h3>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}